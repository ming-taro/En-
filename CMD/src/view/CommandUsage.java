package view;

public class CommandUsage {
	public void printDirUsage() {
		System.out.println("디렉터리에 있는 파일과 하위 디렉터리 목록을 보여 줍니다.\r\n" + 
				"\r\n" + 
				"DIR [drive:][path][filename] [/A[[:]attributes]] [/B] [/C] [/D] [/L] [/N]\r\n" + 
				"  [/O[[:]sortorder]] [/P] [/Q] [/R] [/S] [/T[[:]timefield]] [/W] [/X] [/4]\r\n" + 
				"\r\n" + 
				"  [drive:][path][filename]\r\n" + 
				"              목록에 추가할 드라이브, 디렉터리 및/또는 파일을 지정합니다.\r\n" + 
				"\r\n" + 
				"  /A          지정된 특성을 가진 파일을 보여 줍니다.\r\n" + 
				"  attributes   D  디렉터리                R  읽기 전용 파일\r\n" + 
				"               H  숨김 파일               A  보관할 파일\r\n" + 
				"               S  시스템 파일               I  콘텐츠가 인덱싱되지 않은 파일\r\n" + 
				"               L  재분석 지점             O  오프라인 파일\r\n" + 
				"               -  부정을 뜻하는 접두사\r\n" + 
				"  /B          최소 포맷을 사용합니다(머리말 정보나 요약 없음)\r\n" + 
				"  /C          파일 크기에 천 단위 구분 기호를 보여 줍니다.  이것은 기본값\r\n" + 
				"              입니다. 구분 기호를 표시하지 않으려면 /-C를 사용하십시오.\r\n" + 
				"  /D          가로 목록과 동일하지만 파일 목록을 세로로 정렬하여 보여 줍니다.\r\n" + 
				"  /L          소문자를 사용합니다.\r\n" + 
				"  /N          파일 이름이 제일 오른쪽에 오도록 새로운 긴 목록 포맷을 사용합니다.\r\n" + 
				"  /O          파일을 정렬된 순서로 보여 줍니다.\r\n" + 
				"  sortorder    N  이름순(알파벳순)       S  크기순(가장 작은 항목부터)\r\n" + 
				"               E  확장명순(알파벳순)  D  날짜/시간순(가장 오래된 항복부터)\r\n" + 
				"               G  그룹 디렉터리 먼저    -  순서를 반대로 하는 접두사\r\n" + 
				"  /P          정보가 한 화면에 꽉 차면 잠깐 멈춥니다.\r\n" + 
				"  /Q          파일 소유자를 보여 줍니다.\r\n" + 
				"  /R          파일의 대체 데이터 스트림을 표시합니다.\r\n" + 
				"  /S          지정한 디렉터리와 하위 디렉터리를 포함하여 보여 줍니다.\r\n" + 
				"  /T          정렬에 사용할 시간 필드를 지정합니다\r\n" + 
				"  timefield   C  작성한 시간\r\n" + 
				"              A  마지막 액세스한 시간\r\n" + 
				"              W  마지막 기록한 시간\r\n" + 
				"  /W          가로 목록 형식을 사용합니다.\r\n" + 
				"  /X          8dot3 파일 이름이 아닌 파일에 대한 짧은 이름을 보여 줍니다\r\n" + 
				"              이 형식은 긴 이름 앞에 짧은 이름이 추가된 것으로 /N 포맷과\r\n" + 
				"              같습니다. 짧은 이름이 없으면\r\n" + 
				"              공백을 보여 줍니다.\r\n" + 
				"  /4          4자릿수 연도를 표시합니다.\r\n" + 
				"\r\n" + 
				"스위치를 DIRCMD 환경 변수로 미리 설정할 수 있습니다. 하이픈(-)을\r\n" + 
				"스위치 앞에 접두사로 붙이면 미리 설정된 스위치를 재정의합니다(예, /-W)." + "\n");
	}
	public void printCopyUsage() {
		System.out.println("하나 이상의 파일을 다른 위치로 복사합니다.\r\n" + 
				"\r\n" + 
				"COPY [/D] [/V] [/N] [/Y | /-Y] [/Z] [/L] [/A | /B ] 원본 [/A | /B]\r\n" + 
				"     [+ 원본 [/A | /B] [+ ...]] [대상 [/A | /B]]\r\n" + 
				"\r\n" + 
				"  원본         복사할 파일을 지정합니다.\r\n" + 
				"  /A           ASCII 텍스트 파일임을 나타냅니다.\r\n" + 
				"  /B           이진 파일임을 나타냅니다.\r\n" + 
				"  /D           대상 파일이 암호화 없이 만들어지도록 허용합니다.\r\n" + 
				"  대상         새 파일에 대한 디렉터리와/또는 파일 이름을 지정합니다.\r\n" + 
				"  /V           새 파일이 올바르게 기록되었는지 확인합니다.\r\n" + 
				"  /N           8.3 이름이 아닌 파일을 복사할 때, 짧은 파일 이름이 있으면\r\n" + 
				"               그 이름을 사용합니다.\r\n" + 
				"  /Y           이미 있는 대상 파일을 덮어쓸지를\r\n" + 
				"               확인하지 않습니다.\r\n" + 
				"  /-Y          이미 있는 대상 파일을 덮어쓸지\r\n" + 
				"               확인하기 위해 묻습니다.\r\n" + 
				"  /Z           다시 시작 모드에 있는 네트워크 파일을 복사합니다.\r\n" + 
				"  /L           원본이 기호화된 링크인 경우 원본 링크가 가리키는 실제 파일 대신\r\n" + 
				"               링크를 대상에 복사합니다.\r\n" + 
				"\r\n" + 
				"/Y 스위치는 COPYCMD 환경 변수에 이미 지정되어 있습니다.\r\n" + 
				"이 설정은 명령줄의 /-Y 스위치에 의해 무시될 수 있습니다. COPY 명령을 일괄 처리 스크립트에서 실행하지 않으면\r\n" + 
				"기본적으로 이미 있는 파일을\r\n" + 
				"덮어쓸지를 묻습니다.\r\n" + 
				"\r\n" + 
				"파일을 한 파일에 붙여 넣으려면 원본에 여러 파일을 지정하고\r\n" + 
				"(대표 문자 또는 파일1+파일2+파일3 포맷을 사용하여) 대상에는 한 파일을 지정합니다." + "\n");
	}
	public void printCdUsage() {
		System.out.println("현재 디렉터리 이름을 보여주거나 바꿉니다.\r\n" + 
				"\r\n" + 
				"CHDIR [/D] [드라이브:][경로]\r\n" + 
				"CHDIR [..]\r\n" + 
				"CD [/D] [드라이브:][경로]\r\n" + 
				"CD [..]\r\n" + 
				"\r\n" + 
				"  ..   상위 디렉터리로 바꿉니다.\r\n" + 
				"\r\n" + 
				"특정 드라이브의 디렉터리를 표시하려면 'CD 드라이브:'를 입력하십시오.\r\n" + 
				"현재 드라이브와 디렉터리를 표시하려면 매개 변수 없이 'CD'를 입력하십시오.\r\n" + 
				"\r\n" + 
				"디렉터리 이외에 현재 드라이브도 바꾸려면 /D 스위치를 사용하십시오.\r\n" + 
				"\r\n" + 
				"명령 확장을 사용하면 CHDIR은 아래와 같이 바뀝니다.\r\n" + 
				"\r\n" + 
				"현재 디렉터리 문자열이 디스크 이름에 있는 것 같이 사용되도록\r\n" + 
				"변환됩니다. 그러므로 CD C:\\TEMP는 실제로, 이 디렉터리가 디스크에\r\n" + 
				"있으면 현재 디렉터리가 C:\\Temp로 설정됩니다.\r\n" + 
				"\r\n" + 
				"CHDIR 명령은 스페이스를 분리 기호로 취급하지 않으므로 CD는\r\n" + 
				"인용 부호로 이름을 에워싸지 않아도 이름에 스페이스를 가지고 있는\r\n" + 
				"하위 디렉터리로 갈 수 있습니다.\r\n" + 
				"예를 들면 다음 두 가지 경우는 모두 같습니다:\r\n" + 
				"\r\n" + 
				"    cd \\winnt\\profiles\\username\\programs\\start menu\r\n" + 
				"\r\n" + 
				"    cd \"\\winnt\\profiles\\username\\programs\\start menu\"" + "\n");
	}
	public void printHelpUsage() {
		System.out.println("Windows 명령어에 관한 도움말을 제공합니다.\r\n" + 
				"\r\n" + 
				"HELP [명령어]\r\n" + 
				"\r\n" + 
				"    명령어 - 해당 명령어에 대한 도움말 정보를 표시합니다." + "\n");
	}
	public void printClsUsage() {
		System.out.println("화면을 지웁니다.\r\n" + 
				"\r\n" + 
				"CLS" + "\n");
	}
	public void printMoveUsage() {
		System.out.println("파일을 옮기고 파일과 디렉터리 이름을 바꿉니다.\r\n" + 
				"\r\n" + 
				"하나 이상의 파일을 옮기려면:\r\n" + 
				"MOVE [/Y | /-Y] [드라이브:][경로]파일 이름1[,...] 대상\r\n" + 
				"\r\n" + 
				"디렉터리 이름을 바꾸려면:\r\n" + 
				"MOVE [/Y | /-Y] [드라이브:][경로]디렉터리 이름1 디렉터리 이름2\r\n" + 
				"\r\n" + 
				"  [드라이브:][경로]파일 이름1 파일이나 옮길 파일의 위치와 이름을\r\n" + 
				"                          지정합니다.\r\n" + 
				"  대상                  파일의 새 위치를 지정합니다. 대상은\r\n" + 
				"                          드라이브 문자와 콜론, 디렉터리 이름, 또는 조합으로\r\n" + 
				"                         구성될 수 있습니다. 한 파일만 옮기려면,\r\n" + 
				"                         옮길 때 이름을 바꿀 파일이 있으면\r\n" + 
				"                           파일 이름을 포함할 수 있습니다.\r\n" + 
				"  [드라이브:][경로]디렉터리 이름1  이름을 바꿀 디렉터리를 지정합니다.\r\n" + 
				"  디렉터리 이름2                디렉터리의 새 이름을 지정합니다.\r\n" + 
				"\r\n" + 
				"  /Y                      이미 있는 대상 파일을 겹쳐 쓸지\r\n" + 
				"                          묻는 것을 금합니다.\r\n" + 
				"  /-Y                     이미 있는 대상 파일을 겹쳐 쓸지\r\n" + 
				"                          묻습니다.\r\n" + 
				"\r\n" + 
				"COPYCMD 환경 변수에 /Y 스위치가 나타날 수도 있습니다.\r\n" + 
				"명령줄에 있는 /-Y를 사용하여 무시될 수도 있습니다.\r\n" + 
				"일괄 처리 스크립트 내에서 MOVE 명령어를 실행하지 않으면 기본적으로\r\n" + 
				"덮어쓸지를 묻습니다." + "\n");
	}
}
